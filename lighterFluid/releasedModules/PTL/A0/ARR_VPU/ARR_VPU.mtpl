
Version 1.0;

ProgramStyle = Modular;
# adambyrn_2024_01_11_14_00_12
TestPlan ARR_VPU;
Import ARR_VPU.usrv;

Import PrimeShmooTestMethod.xml;
Import RecoveryBypass.xml;
Import RecoveryUpdate.xml;
Import VminTC.xml;
Import OASIS_HVQK_tt.xml;
Import OASIS_Screen_tt.xml;

Counters
{
	n90610050_fail_CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS_0,
	n90600000_fail_CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS_0,
	n61310000_fail_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_0,
	n61310002_fail_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_2,
	n21330130_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_0,
	n21330132_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_2,
	n21330140_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR_0,
	n21330142_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR_2,
	n61330150_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_0,
	n61330152_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_2,
	n21310000_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n21310002_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n21310010_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0_0,
	n21310020_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n21310022_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n21310030_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1_0,
	n21310040_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n21310042_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n21310050_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2_0,
	n21310060_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n21310062_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n21310070_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3_0,
	n21310080_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n21310082_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n21310090_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4_0,
	n21310100_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n21310102_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n21310110_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5_0,
	n61310200_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n61310202_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n61310210_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0_0,
	n61310220_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n61310222_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n61310230_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1_0,
	n61310240_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n61310242_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n61310250_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2_0,
	n61310260_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n61310262_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n61310270_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3_0,
	n61310280_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n61310282_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n61310290_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4_0,
	n61310300_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n61310302_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n61310310_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5_0,
	n61331000_fail_XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_0,
	n90627100_fail_CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS_0,
	n17617110_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_0,
	n17617113_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_3,
	n17617114_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_4,
	n98017120_fail_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL_0,
	n98017122_fail_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL_2,
	n17617130_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_0,
	n17617133_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_3,
	n17617134_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_4,
	n17617140_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_0,
	n17617143_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_3,
	n17617144_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_4,
	n90338000_fail_CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS_0,
	n17338010_fail_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS_0,
	n17338012_fail_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS_2,
	n61338020_fail_XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL_0,
	n21338030_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU_0,
	n21338040_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR_0,
	n61338050_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU_0,
	n61338100_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n61338110_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n61338120_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n61338130_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n61338140_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n61338150_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n21338200_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n21338210_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n21338220_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n21338230_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n21338240_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n21338250_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n90633500_fail_CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS_0,
	n26613000_fail_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS_0,
	n26613002_fail_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS_2,
	n26613010_fail_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL_0,
	n26613012_fail_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL_2,
	n26213100_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_0,
	n26213102_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_2,
	n26213110_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR_0,
	n26213112_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR_2,
	n26613120_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_0,
	n26613122_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_2,
	n26213200_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n26213202_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n26213210_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n26213212_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n26213220_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n26213222_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n26213230_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n26213232_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n26213240_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n26213242_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n26213250_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n26213252_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n26213300_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n26213302_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n26213310_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n26213312_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n26213320_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n26213322_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n26213330_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n26213332_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n26213340_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n26213342_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n26213350_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n26213352_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n90624000_fail_CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS_0,
	n90614010_fail_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS_0,
	n90614012_fail_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS_2,
	n61324020_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL_0,
	n21324030_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL_0,
	n61324100_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_0,
	n61324102_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_2,
	n61324110_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n61324112_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n61324120_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n61324122_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n61324130_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n61324132_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n61324140_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n61324142_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n61324150_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n61324152_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n61324160_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n61324162_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n21324200_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR_0,
	n21324202_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR_2,
	n21324300_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_0,
	n21324302_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_2,
	n21324310_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_0,
	n21324312_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_2,
	n21324320_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_0,
	n21324322_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_2,
	n21324330_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_0,
	n21324332_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_2,
	n21324340_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_0,
	n21324342_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_2,
	n21324350_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_0,
	n21324352_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_2,
	n17615600_fail_XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL_0,
	n61285610_fail_SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL_0,
	n21325620_fail_LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL_0,
	n90626000_fail_CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS_0,
	n17616010_fail_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS_0,
	n17616012_fail_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS_2,
	n61336020_fail_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL_0,
	n61336022_fail_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL_2,
	n21366100_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_0,
	n21366102_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_2,
	n21366110_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR_0,
	n21366112_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR_2,
	n61416120_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_0,
	n61416122_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_2,
	n21336130_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_0,
	n21336132_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_2,
	n21336140_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_0,
	n21336142_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_2,
	n21336150_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_0,
	n21336152_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_2,
	n21346160_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_0,
	n21346162_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_2,
	n21346170_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_0,
	n21346172_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_2,
	n21336180_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_0,
	n21336182_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_2,
	n61536200_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_0,
	n61536202_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_2,
	n61536210_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_0,
	n61536212_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_2,
	n61536220_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_0,
	n61536222_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_2,
	n61536230_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_0,
	n61536232_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_2,
	n61286240_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_0,
	n61286242_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_2,
	n61286250_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_0,
	n61286252_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_2,
	n90626500_fail_CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS_0,
	n17616510_fail_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS_0,
	n17616512_fail_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS_2,
	n61346520_fail_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL_0,
	n61346522_fail_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL_2,
	n21286600_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_0,
	n21286602_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_2,
	n21286610_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR_0,
	n21286612_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR_2,
	n61356620_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_0,
	n61356622_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_2,
	n21336700_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_0,
	n21336702_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_2,
	n21336710_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_0,
	n21336712_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_2,
	n21336720_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_0,
	n21336722_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_2,
	n21336730_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_0,
	n21336732_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_2,
	n21336740_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_0,
	n21336742_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_2,
	n21336750_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_0,
	n21336752_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_2,
	n61336800_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_0,
	n61336802_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_2,
	n61346810_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_0,
	n61346812_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_2,
	n61346820_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_0,
	n61346822_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_2,
	n61356830_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_0,
	n61356832_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_2,
	n61366840_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_0,
	n61366842_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_2,
	n61376850_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_0,
	n61376852_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_2
} # End of Test Counter Definition

Test RecoveryBypass CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS
{
	SetName = "DEFAULT";
	IP = "VPU";
}
Test RecoveryBypass CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test VminTC XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2200";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:1900MHz,ARR_VPU:vpu_ws:1900MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_XSA_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2201";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vbtr_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2202";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_BTRU_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2203";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2204";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0
{
	BypassPort = -1;
	RecoveryOption = "VPU0";
	TrackerName = "VPU";
}
Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2205";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1
{
	BypassPort = -1;
	RecoveryOption = "VPU1";
	TrackerName = "VPU";
}
Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2206";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2
{
	BypassPort = -1;
	RecoveryOption = "VPU2";
	TrackerName = "VPU";
}
Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2207";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3
{
	BypassPort = -1;
	RecoveryOption = "VPU3";
	TrackerName = "VPU";
}
Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2208";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4
{
	BypassPort = -1;
	RecoveryOption = "VPU4";
	TrackerName = "VPU";
}
Test VminTC LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2209";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5
{
	BypassPort = -1;
	RecoveryOption = "VPU5";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2210";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0
{
	BypassPort = -1;
	RecoveryOption = "VPU0";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2211";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1
{
	BypassPort = -1;
	RecoveryOption = "VPU1";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2212";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2
{
	BypassPort = -1;
	RecoveryOption = "VPU2";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2213";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3
{
	BypassPort = -1;
	RecoveryOption = "VPU3";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2214";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4
{
	BypassPort = -1;
	RecoveryOption = "VPU4";
	TrackerName = "VPU";
}
Test VminTC SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2215";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_LFM_PRE_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryUpdate SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5
{
	BypassPort = -1;
	RecoveryOption = "VPU5";
	TrackerName = "VPU";
}
Test PrimeShmooTestMethod XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = 1;
	LevelsTc = "BASE::SHMOO_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	XAxisParam = "p_mtd_per";
	XAxisRange = "9e-9:0.5e-9:8"; # Start: Resolution: NumberOfPoints
	XAxisParamType = "TimingTestCondition";
	YAxisParam = "p_vccsa_spec";
	YAxisRange = "0.5:0.05:12"; # Start: Resolution: NumberOfPoints
	YAxisParamType = "LevelsTestCondition";
}
Test RecoveryBypass CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCHVQKTest XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC
{
	bypass_global = "-1";
	level = "BASE::SBF_HVQK_SDT_SA_HVQK";
	patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_nonrecoverable_stress_list";
	timings = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	voltage_step_config_file = "./Modules/ARR_VPU/InputFiles/vpu_cache_all_stress_vpu_xsa_nonrec_HOT.hvqk.config.xml";
	power_up_level = "BASE::SBF_nom_lvl";
	power_down_level = "BASE::Power_Up_TC_force_0V";
	preplist = "CPD_DEBUG!EnableDMEMCapture XXTDO";
	preinstance = "";
	postinstance = "EmbPython!Execute ./Modules/TPI_BASE/InputFiles/DTS.ProcessDMEMData";
	ifpm_input_file = "";
	ifpm_modifygroups = "";
}
Test iCScreenTest XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test iCHVQKTest XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL
{
	bypass_global = "-1";
	level = "BASE::SBF_HVQK_SDT_SA_HVQK";
	patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_xsatiles_stress_rec_list";
	timings = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	voltage_step_config_file = "./Modules/ARR_VPU/InputFiles/vpu_cache_all_stress_HOT.hvqk.config.xml";
	power_up_level = "BASE::SBF_nom_lvl";
	power_down_level = "BASE::Power_Up_TC_force_0V";
	preplist = "CPD_DEBUG!EnableDMEMCapture XXTDO";
	preinstance = "";
	postinstance = "EmbPython!Execute ./Modules/TPI_BASE/InputFiles/DTS.ProcessDMEMData";
	ifpm_input_file = "";
	ifpm_modifygroups = "";
}
Test iCHVQKTest XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL
{
	bypass_global = "-1";
	level = "BASE::SBF_HVQK_SDT_SA_HVQK";
	patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_xsatiles_stress_rec_list";
	timings = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	voltage_step_config_file = "./Modules/ARR_VPU/InputFiles/vpu_cache_all_stress_vpu_mask_HOT.hvqk.config.xml";
	power_up_level = "BASE::SBF_nom_lvl";
	power_down_level = "BASE::Power_Up_TC_force_0V";
	preplist = "CPD_DEBUG!EnableDMEMCapture XXTDO";
	preinstance = "";
	postinstance = "EmbPython!Execute ./Modules/TPI_BASE/InputFiles/DTS.ProcessDMEMData";
	ifpm_input_file = "";
	ifpm_modifygroups = "";
}
Test RecoveryBypass CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCScreenTest XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test VminTC XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2260";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_XSA_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2283";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vbtr_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2284";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_BTRU_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2285";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2286";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2287";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2288";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2289";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2290";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2291";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2292";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2293";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2294";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2295";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2296";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2297";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_LFM_SDTEND_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryBypass CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCScreenTest XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test VminTC XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2216";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:1900MHz,ARR_VPU:vpu_ws:1900MHz";
	StartVoltages = "ARR_VPU_XSA_LFM_PRE_VMIN";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_XSA_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2217";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:1900MHz,ARR_VPU:vpu_ws:1900MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vbtr_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2218";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_BTRU_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2219";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2220";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2221";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2222";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2223";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2224";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2225";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2226";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2227";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2228";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2229";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2230";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2231";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_LFM_POST_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryBypass CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCScreenTest XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_all_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2232";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:1900MHz,ARR_VPU:vpu_ws:1900MHz";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_all_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2241";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:1900MHz,ARR_VPU:vpu_ws:1900MHz";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_notile_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2233";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2234";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2235";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2236";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2237";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2238";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2239";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_notile_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2242";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_BTR_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2243";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2244";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2245";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2246";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2247";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2248";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.7";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_LFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL
{
	BypassPort = 1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "SearchWithScoreboard";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2249";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_LFM_END_VMAX";
	VoltageTargets = "VCCSA_HC";
}

Test PrimeShmooTestMethod SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = 1;
	LevelsTc = "BASE::SHMOO_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_all_list";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	XAxisParam = "p_mtd_per";
	XAxisRange = "9e-9:0.5e-9:8"; # Start: Resolution: NumberOfPoints
	XAxisParamType = "TimingTestCondition";
	YAxisParam = "p_vccsa_spec";
	YAxisRange = "0.5:0.05:12"; # Start: Resolution: NumberOfPoints
	YAxisParamType = "LevelsTestCondition";
}
Test PrimeShmooTestMethod LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL
{
	BypassPort = 1;
	LevelsTc = "BASE::SHMOO_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_all_list";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	XAxisParam = "p_mtd_per";
	XAxisRange = "9e-9:0.5e-9:8"; # Start: Resolution: NumberOfPoints
	XAxisParamType = "TimingTestCondition";
	YAxisParam = "p_vccsa_spec";
	YAxisRange = "0.5:0.05:12"; # Start: Resolution: NumberOfPoints
	YAxisParamType = "LevelsTestCondition";
}
Test RecoveryBypass CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCScreenTest XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test VminTC XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2250";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3100MHz,ARR_VPU:vpu_ws:3100MHz";
	StartVoltages = "ARR_VPU_XSA_LFM_PRE_VMIN";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_XSA_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2252";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3100MHz,ARR_VPU:vpu_ws:3100MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vbtr_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2253";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_BTRU_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2254";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2255";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2256";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2257";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2258";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2259";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_lsa_ks_sort_tito_tile5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2261";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2262";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2263";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2264";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2265";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3100MHz,ARR_VPU:vpu_ws:3100MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2266";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3100MHz,ARR_VPU:vpu_ws:3100MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "marr_mbist_vpu_ssa_ks_sort_tito_tile5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2267";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3100MHz,ARR_VPU:vpu_ws:3100MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_HFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test RecoveryBypass CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS
{
	SetName = "SET";
	IP = "VPU";
}
Test iCScreenTest XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS
{
	bypass_global = "-1";
	screen_custom_file = "./Modules/ARR_COMMON/InputFiles/ResetDFFCustom.txt";
	screen_custom_setpoint = "DUMMY";
	preinstance = "CPD_DEBUG!ExecPrimeCsCallback ReadTrackerValue(VPU)";
	screen_test_set = "MaskIfDefeatured";
	screen_tests_file = "./Modules/ARR_VPU/InputFiles/MaskStressDefeature.txt";
}

Test VminTC XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_xsa_all_parallperstep_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2251";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3700MHz,ARR_VPU:vpu_ws:3700MHz";
	StartVoltages = "ARR_VPU_XSA_LFM_PRE_VMIN";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_XSA_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2268";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Global";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3700MHz,ARR_VPU:vpu_ws:3700MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_CPU_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_vbtr_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2269";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_BTRU_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU
{
	BypassPort = -1;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_vcpu_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2270";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_CPU_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2271";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T0_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2272";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T1_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2273";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T2_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2274";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T3_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2275";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T4_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_lsa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2276";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_LSA_T5_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0
{
	BypassPort = ARR_VPU.VPU0_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til0_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2277";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T0_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1
{
	BypassPort = ARR_VPU.VPU1_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til1_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2278";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T1_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2
{
	BypassPort = ARR_VPU.VPU2_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til2_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2279";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T2_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3
{
	BypassPort = ARR_VPU.VPU3_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til3_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2280";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3700MHz,ARR_VPU:vpu_ws:3700MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T3_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4
{
	BypassPort = ARR_VPU.VPU4_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til4_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2281";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3700MHz,ARR_VPU:vpu_ws:3700MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T4_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}

Test VminTC SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5
{
	BypassPort = ARR_VPU.VPU5_EXECUTE;
	EndVoltageLimits = "0.85"; 
	ExecutionMode = "Search";
	FailCaptureCount = "###FailCaptureCount###";
	FeatureSwitchSettings = "recovery_update_always,disable_masked_targets,return_on_global_sticky_error";
	ForwardingMode = "Input";
	LevelsTc = "BASE::SBF_nom_lvl";
	Patlist = "arr_vpu_sort_lfm_hvqk_ssa_til5_list";
	PatternNameMap = "9,10,11,12,13,14,15";
	PinMap = "###PinMap###";
	RecoveryMode = "RecoveryPort";
	RecoveryOptions = "TBD";
	RecoveryTrackingIncoming = "###RecoveryTrackingIncoming###";
	RecoveryTrackingOutgoing = "###RecoveryTrackingOutgoing###";
	ScoreboardBaseNumber = "2282";
	ScoreboardEdgeTicks = "###ScoreboardEdgeTicks###";
	ScoreboardMaxFails = "###ScoreboardMaxFails###";
	SetPointsPlistParamName = "Patlist";
	SetPointsPlistMode = "Local";
	SetPointsPreInstance = "ARR_VPU:vpu_clk:3700MHz,ARR_VPU:vpu_ws:3700MHz";
	StartVoltages = "0.45";
	StartVoltagesForRetry = "###StartVoltagesForRetry###";
	StepSize = 0.02;
	TestMode = "###TestMode###";
	TimingsTc = "BASE::cpu_ctf_timing_tclk100_cclk100_bclk400";
	#TriggerLevelsCondition = "BASE::SEARCH_VBUMP_CORE_lvl_force_search";
	#TriggerMap = "FAST_VBUMP_CORE_Search_TriggerMap";
	VminResult = "ARR_VPU_SSA_T5_TFM_END_VMIN";
	VoltageTargets = "VCCSA_HC";
}


DUTFlow ARR_VPU_BEGIN @BEGIN_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90610050_fail_CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90610050_fail_ARR_VPU_CTRL_X_AUX_K_BEGIN_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow XSA_NON_RECOVERY_PRE
{
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21330130_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b21330130_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21330132_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_2;
	        SetBin SoftBins.b21330132_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21330140_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR_0;
	        SetBin SoftBins.b21330140_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21330142_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR_2;
	        SetBin SoftBins.b21330142_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_BTR;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61330150_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b61330150_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61330152_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU_2;
	        SetBin SoftBins.b61330152_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
	}
}
DUTFlow LSA_RECOVERY_PRE
{
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310000_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        ##EDC## SetBin SoftBins.b21310000_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310002_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        ##EDC## SetBin SoftBins.b21310002_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310010_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0_0;
	        SetBin SoftBins.b21310010_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310020_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        ##EDC## SetBin SoftBins.b21310020_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310022_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        ##EDC## SetBin SoftBins.b21310022_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310030_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1_0;
	        SetBin SoftBins.b21310030_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310040_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        ##EDC## SetBin SoftBins.b21310040_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310042_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        ##EDC## SetBin SoftBins.b21310042_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310050_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2_0;
	        SetBin SoftBins.b21310050_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310060_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        ##EDC## SetBin SoftBins.b21310060_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310062_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        ##EDC## SetBin SoftBins.b21310062_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310070_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3_0;
	        SetBin SoftBins.b21310070_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310080_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        ##EDC## SetBin SoftBins.b21310080_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310082_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        ##EDC## SetBin SoftBins.b21310082_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310090_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4_0;
	        SetBin SoftBins.b21310090_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310100_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        ##EDC## SetBin SoftBins.b21310100_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310102_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        ##EDC## SetBin SoftBins.b21310102_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			GoTo LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5 LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21310110_fail_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5_0;
	        SetBin SoftBins.b21310110_fail_ARR_VPU_LSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow SSA_RECOVERY_PRE
{
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310200_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        ##EDC## SetBin SoftBins.b61310200_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310202_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        ##EDC## SetBin SoftBins.b61310202_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310210_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0_0;
	        SetBin SoftBins.b61310210_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC0;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310220_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        ##EDC## SetBin SoftBins.b61310220_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310222_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        ##EDC## SetBin SoftBins.b61310222_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310230_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1_0;
	        SetBin SoftBins.b61310230_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC1;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310240_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        ##EDC## SetBin SoftBins.b61310240_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310242_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        ##EDC## SetBin SoftBins.b61310242_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310250_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2_0;
	        SetBin SoftBins.b61310250_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC2;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310260_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        ##EDC## SetBin SoftBins.b61310260_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310262_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        ##EDC## SetBin SoftBins.b61310262_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310270_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3_0;
	        SetBin SoftBins.b61310270_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC3;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310280_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        ##EDC## SetBin SoftBins.b61310280_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310282_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        ##EDC## SetBin SoftBins.b61310282_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310290_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4_0;
	        SetBin SoftBins.b61310290_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC4;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310300_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        ##EDC## SetBin SoftBins.b61310300_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310302_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        ##EDC## SetBin SoftBins.b61310302_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			GoTo SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5 SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310310_fail_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5_0;
	        SetBin SoftBins.b61310310_fail_ARR_VPU_SSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_TILEREC5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow SHMOO_PRE
{
	DUTFlowItem XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61331000_fail_XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_0;
	        ##EDC## SetBin SoftBins.b61331000_fail_ARR_VPU_XSA_VPU_SHMOO_E_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 2
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 3
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow ARR_VPU_PREHVQK @PREHVQK_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90600000_fail_CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90600000_fail_ARR_VPU_CTRL_X_AUX_K_PREHVQK_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL;
		}
	}
	DUTFlowItem XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310000_fail_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_0;
	        ##EDC## SetBin SoftBins.b61310000_fail_ARR_VPU_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL;
			GoTo XSA_NON_RECOVERY_PRE;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61310002_fail_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL_2;
	        ##EDC## SetBin SoftBins.b61310002_fail_ARR_VPU_XSA_VPU_VMIN_K_PREHVQK_TITO_VPU_NOM_LFM_1900_ALL;
			GoTo XSA_NON_RECOVERY_PRE;
        }
	}
    DUTFlowItem XSA_NON_RECOVERY_PRE XSA_NON_RECOVERY_PRE
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo LSA_RECOVERY_PRE;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_RECOVERY_PRE;
		}
	}
    DUTFlowItem LSA_RECOVERY_PRE LSA_RECOVERY_PRE
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo SSA_RECOVERY_PRE;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_RECOVERY_PRE;
		}
	}
    DUTFlowItem SSA_RECOVERY_PRE SSA_RECOVERY_PRE
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
    DUTFlowItem SHMOO_PRE SHMOO_PRE
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow ARR_VPU_HOTSTRESS @HOTSTRESS_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90627100_fail_CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90627100_fail_ARR_VPU_CTRL_X_AUX_K_HOTSTRESS_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC;
		}
	}
	DUTFlowItem XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617110_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_0;
	        ##EDC## SetBin SoftBins.b17617110_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC;
			GoTo XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
		}
		Result 2
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
		}
        Result 3
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617113_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_3;
	        ##EDC## SetBin SoftBins.b17617113_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC;
			GoTo XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
        }
        Result 4
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617114_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC_4;
	        ##EDC## SetBin SoftBins.b17617114_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_NONREC;
			GoTo XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
        }
	}
	DUTFlowItem XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n98017120_fail_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL_0;
	        ##EDC## SetBin SoftBins.b98017120_fail_ARR_VPU_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n98017122_fail_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL_2;
	        ##EDC## SetBin SoftBins.b98017122_fail_ARR_VPU_XSA_VPU_SCREEN_E_HOTSTRESS_X_X_X_X_VPU_MASK_ALL;
			GoTo XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL;
        }
	}
	DUTFlowItem XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617130_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_0;
	        ##EDC## SetBin SoftBins.b17617130_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 2
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 3
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617133_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_3;
	        ##EDC## SetBin SoftBins.b17617133_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL;
			Return 1;
        }
        Result 4
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617134_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL_4;
	        ##EDC## SetBin SoftBins.b17617134_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_ALL;
			Return 1;
        }
	}
	DUTFlowItem XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617140_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_0;
	        ##EDC## SetBin SoftBins.b17617140_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 2
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 3
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617143_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_3;
	        ##EDC## SetBin SoftBins.b17617143_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL;
			Return 1;
        }
        Result 4
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17617144_fail_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL_4;
	        ##EDC## SetBin SoftBins.b17617144_fail_ARR_VPU_XSA_VPU_HVQK_E_HOTSTRESS_TITO_VPU_NOM_LFM_1900_VPU_MASKALL;
			Return 1;
        }
	}
}
DUTFlow XSA_NON_RECOVERY_SDTEND
{
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338030_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b21338030_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338040_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR_0;
	        SetBin SoftBins.b21338040_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_BTR;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338050_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b61338050_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow SSA_RECOVERY_POST_SDTEND
{
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338100_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b61338100_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338110_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b61338110_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338120_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b61338120_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338130_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b61338130_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338140_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b61338140_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
		}
	}
	DUTFlowItem SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5 SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338150_fail_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b61338150_fail_ARR_VPU_SSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow LSA_RECOVERY_POST_SDTEND
{
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338200_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b21338200_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338210_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b21338210_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338220_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b21338220_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338230_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b21338230_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338240_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b21338240_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
		}
	}
	DUTFlowItem LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5 LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21338250_fail_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b21338250_fail_ARR_VPU_LSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow ARR_VPU_SDTEND @SDTEND_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90338000_fail_CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90338000_fail_ARR_VPU_CTRL_X_AUX_K_SDTEND_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS;
		}
	}
	DUTFlowItem XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17338010_fail_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS_0;
	        ##EDC## SetBin SoftBins.b17338010_fail_ARR_VPU_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17338012_fail_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS_2;
	        ##EDC## SetBin SoftBins.b17338012_fail_ARR_VPU_XSA_VPU_SCREEN_E_SDTEND_X_X_X_X_VPU_MASK_ALLSTRESS;
			GoTo XSA_NON_RECOVERY_SDTEND;
        }
	}
	DUTFlowItem XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61338020_fail_XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL_0;
	        SetBin SoftBins.b61338020_fail_ARR_VPU_XSA_VPU_VMIN_K_SDTEND_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
    DUTFlowItem XSA_NON_RECOVERY_SDTEND XSA_NON_RECOVERY_SDTEND
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo SSA_RECOVERY_POST_SDTEND;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_RECOVERY_POST_SDTEND;
		}
	}
    DUTFlowItem SSA_RECOVERY_POST_SDTEND SSA_RECOVERY_POST_SDTEND
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo LSA_RECOVERY_POST_SDTEND;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_RECOVERY_POST_SDTEND;
		}
	}
    DUTFlowItem LSA_RECOVERY_POST_SDTEND LSA_RECOVERY_POST_SDTEND
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow XSA_NON_RECOVERY_POST
{
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213100_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b26213100_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213102_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_2;
	        SetBin SoftBins.b26213102_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213110_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR_0;
	        SetBin SoftBins.b26213110_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213112_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR_2;
	        SetBin SoftBins.b26213112_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_BTR;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613120_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b26613120_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613122_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU_2;
	        SetBin SoftBins.b26613122_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
	}
}
DUTFlow LSA_RECOVERY_POST
{
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213200_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b26213200_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213202_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        SetBin SoftBins.b26213202_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213210_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b26213210_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213212_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        SetBin SoftBins.b26213212_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213220_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b26213220_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213222_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        SetBin SoftBins.b26213222_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213230_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b26213230_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213232_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        SetBin SoftBins.b26213232_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213240_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b26213240_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213242_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        SetBin SoftBins.b26213242_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5 LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213250_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b26213250_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213252_fail_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        SetBin SoftBins.b26213252_fail_ARR_VPU_LSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
	}
}
DUTFlow SSA_RECOVERY_POST
{
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213300_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b26213300_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213302_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        SetBin SoftBins.b26213302_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213310_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b26213310_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213312_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        SetBin SoftBins.b26213312_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213320_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b26213320_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213322_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        SetBin SoftBins.b26213322_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213330_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b26213330_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213332_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        SetBin SoftBins.b26213332_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213340_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b26213340_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213342_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        SetBin SoftBins.b26213342_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5 SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213350_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b26213350_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26213352_fail_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        SetBin SoftBins.b26213352_fail_ARR_VPU_SSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
	}
}
DUTFlow ARR_VPU_POSTHVQK @POSTHVQK_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90633500_fail_CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90633500_fail_ARR_VPU_CTRL_X_AUX_K_POSTHVQK_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS;
		}
	}
	DUTFlowItem XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613000_fail_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS_0;
	        ##EDC## SetBin SoftBins.b26613000_fail_ARR_VPU_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613002_fail_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS_2;
	        ##EDC## SetBin SoftBins.b26613002_fail_ARR_VPU_XSA_VPU_SCREEN_E_POSTHVQK_X_X_X_X_VPU_MASK_ALLSTRESS;
			GoTo XSA_NON_RECOVERY_POST;
        }
	}
	DUTFlowItem XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613010_fail_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL_0;
	        SetBin SoftBins.b26613010_fail_ARR_VPU_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n26613012_fail_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL_2;
	        SetBin SoftBins.b26613012_fail_ARR_VPU_XSA_VPU_VMIN_K_POSTHVQK_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
	}
    DUTFlowItem XSA_NON_RECOVERY_POST XSA_NON_RECOVERY_POST
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo LSA_RECOVERY_POST;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_RECOVERY_POST;
		}
	}
    DUTFlowItem LSA_RECOVERY_POST LSA_RECOVERY_POST
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo SSA_RECOVERY_POST;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_RECOVERY_POST;
		}
	}
    DUTFlowItem SSA_RECOVERY_POST SSA_RECOVERY_POST
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow KS_SSA_NON_REC
{
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324100_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_0;
	        SetBin SoftBins.b61324100_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324102_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_2;
	        SetBin SoftBins.b61324102_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU;
			Return 1;
        }
	}
}
DUTFlow KS_SSA
{
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324110_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b61324110_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324112_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        SetBin SoftBins.b61324112_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324120_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b61324120_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324122_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        SetBin SoftBins.b61324122_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324130_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b61324130_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324132_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        SetBin SoftBins.b61324132_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324140_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b61324140_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324142_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        SetBin SoftBins.b61324142_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324150_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b61324150_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324152_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        SetBin SoftBins.b61324152_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5 SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324160_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b61324160_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324162_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        SetBin SoftBins.b61324162_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
	}
}
DUTFlow KS_LSA_NON_REC
{
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324200_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR_0;
	        SetBin SoftBins.b21324200_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324202_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR_2;
	        SetBin SoftBins.b21324202_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_CPU_BTR;
			Return 1;
        }
	}
}
DUTFlow KS_LSA
{
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324300_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_0;
	        SetBin SoftBins.b21324300_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324302_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0_2;
	        SetBin SoftBins.b21324302_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE0;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
        }
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324310_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_0;
	        SetBin SoftBins.b21324310_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324312_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1_2;
	        SetBin SoftBins.b21324312_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE1;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
        }
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324320_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_0;
	        SetBin SoftBins.b21324320_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324322_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2_2;
	        SetBin SoftBins.b21324322_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE2;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
        }
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324330_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_0;
	        SetBin SoftBins.b21324330_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324332_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3_2;
	        SetBin SoftBins.b21324332_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE3;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
        }
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324340_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_0;
	        SetBin SoftBins.b21324340_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324342_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4_2;
	        SetBin SoftBins.b21324342_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE4;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
        }
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5 LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324350_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_0;
	        SetBin SoftBins.b21324350_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324352_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5_2;
	        SetBin SoftBins.b21324352_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_TILE5;
			Return 1;
        }
	}
}
DUTFlow KS
{
	DUTFlowItem CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90624000_fail_CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90624000_fail_ARR_VPU_CTRL_X_AUX_K_END_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS;
		}
	}
	DUTFlowItem XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90614010_fail_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS_0;
	        ##EDC## SetBin SoftBins.b90614010_fail_ARR_VPU_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90614012_fail_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS_2;
	        ##EDC## SetBin SoftBins.b90614012_fail_ARR_VPU_XSA_VPU_SCREEN_E_END_X_X_X_X_VPU_MASK_ALLSTRESS;
			GoTo KS_SSA_NON_REC;
        }
	}
	DUTFlowItem SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61324020_fail_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL_0;
	        SetBin SoftBins.b61324020_fail_ARR_VPU_SSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL;
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL;
		}
	}
	DUTFlowItem LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21324030_fail_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL_0;
	        SetBin SoftBins.b21324030_fail_ARR_VPU_LSA_VPU_VCHK_K_END_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
    DUTFlowItem KS_SSA_NON_REC KS_SSA_NON_REC
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo KS_SSA;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo KS_SSA;
		}
	}
    DUTFlowItem KS_SSA KS_SSA
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo KS_LSA_NON_REC;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo KS_LSA_NON_REC;
		}
	}
    DUTFlowItem KS_LSA_NON_REC KS_LSA_NON_REC
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo KS_LSA;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo KS_LSA;
		}
	}
    DUTFlowItem KS_LSA KS_LSA
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow VMAX
{
	DUTFlowItem XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17615600_fail_XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL_0;
	        ##EDC## SetBin SoftBins.b17615600_fail_ARR_VPU_XSA_VPU_VMAX_K_END_TITO_VPU_NOM_LFM_1900_VPU_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 2
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 3
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 4
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow SHMOO
{
	DUTFlowItem SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61285610_fail_SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL_0;
	        ##EDC## SetBin SoftBins.b61285610_fail_ARR_VPU_SSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
			GoTo LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
		}
		Result 2
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
		}
		Result 3
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
		}
	}
	DUTFlowItem LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21325620_fail_LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL_0;
	        ##EDC## SetBin SoftBins.b21325620_fail_ARR_VPU_LSA_VPU_SHMOO_E_END_TITO_VPU_NOM_LFM_1900_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 2
		{
			Property PassFail = "Pass";
			Return 1;
		}
		Result 3
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow ARR_VPU_END @END_SubFlow
{
    DUTFlowItem KS KS
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo VMAX;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo VMAX;
		}
	}
    DUTFlowItem VMAX VMAX
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
    DUTFlowItem SHMOO SHMOO
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow XSA_NON_RECOVERY_ENDTFM
{
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21366100_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_0;
	        ##EDC## SetBin SoftBins.b21366100_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21366102_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_2;
	        ##EDC## SetBin SoftBins.b21366102_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21366110_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR_0;
	        ##EDC## SetBin SoftBins.b21366110_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21366112_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR_2;
	        ##EDC## SetBin SoftBins.b21366112_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_BTR;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61416120_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_0;
	        ##EDC## SetBin SoftBins.b61416120_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61416122_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU_2;
	        ##EDC## SetBin SoftBins.b61416122_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_CPU;
			Return 1;
        }
	}
}
DUTFlow LSA_RECOVERY_ENDTFM
{
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336130_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_0;
	        ##EDC## SetBin SoftBins.b21336130_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336132_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_2;
	        ##EDC## SetBin SoftBins.b21336132_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336140_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_0;
	        ##EDC## SetBin SoftBins.b21336140_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336142_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_2;
	        ##EDC## SetBin SoftBins.b21336142_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336150_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_0;
	        ##EDC## SetBin SoftBins.b21336150_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336152_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_2;
	        ##EDC## SetBin SoftBins.b21336152_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21346160_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_0;
	        ##EDC## SetBin SoftBins.b21346160_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21346162_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_2;
	        ##EDC## SetBin SoftBins.b21346162_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21346170_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_0;
	        ##EDC## SetBin SoftBins.b21346170_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21346172_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_2;
	        ##EDC## SetBin SoftBins.b21346172_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
			GoTo LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5 LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336180_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_0;
	        ##EDC## SetBin SoftBins.b21336180_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336182_fail_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_2;
	        ##EDC## SetBin SoftBins.b21336182_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
			Return 1;
        }
	}
}
DUTFlow SSA_RECOVERY_ENDTFM
{
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536200_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_0;
	        ##EDC## SetBin SoftBins.b61536200_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536202_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0_2;
	        ##EDC## SetBin SoftBins.b61536202_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE0;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536210_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_0;
	        ##EDC## SetBin SoftBins.b61536210_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536212_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1_2;
	        ##EDC## SetBin SoftBins.b61536212_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE1;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536220_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_0;
	        ##EDC## SetBin SoftBins.b61536220_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536222_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2_2;
	        ##EDC## SetBin SoftBins.b61536222_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE2;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536230_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_0;
	        ##EDC## SetBin SoftBins.b61536230_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61536232_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3_2;
	        ##EDC## SetBin SoftBins.b61536232_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE3;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61286240_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_0;
	        ##EDC## SetBin SoftBins.b61286240_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61286242_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4_2;
	        ##EDC## SetBin SoftBins.b61286242_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE4;
			GoTo SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5 SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5 @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61286250_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_0;
	        ##EDC## SetBin SoftBins.b61286250_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61286252_fail_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5_2;
	        ##EDC## SetBin SoftBins.b61286252_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_TILE5;
			Return 1;
        }
	}
}
DUTFlow ARR_VPU_ENDTFM @ENDTFM_SubFlow
{
	DUTFlowItem CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90626000_fail_CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90626000_fail_ARR_VPU_CTRL_X_AUX_K_ENDTFM_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS;
		}
	}
	DUTFlowItem XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17616010_fail_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS_0;
	        ##EDC## SetBin SoftBins.b17616010_fail_ARR_VPU_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17616012_fail_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS_2;
	        ##EDC## SetBin SoftBins.b17616012_fail_ARR_VPU_XSA_VPU_SCREEN_E_ENDTFM_X_X_X_X_VPU_MASK_ALLSTRESS;
			GoTo XSA_NON_RECOVERY_ENDTFM;
        }
	}
	DUTFlowItem XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61336020_fail_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL_0;
	        ##EDC## SetBin SoftBins.b61336020_fail_ARR_VPU_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61336022_fail_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL_2;
	        ##EDC## SetBin SoftBins.b61336022_fail_ARR_VPU_XSA_VPU_VMIN_K_ENDTFM_TITO_VPU_NOM_HFM_3100_ALL;
			Return 1;
        }
	}
    DUTFlowItem XSA_NON_RECOVERY_ENDTFM XSA_NON_RECOVERY_ENDTFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo LSA_RECOVERY_ENDTFM;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_RECOVERY_ENDTFM;
		}
	}
    DUTFlowItem LSA_RECOVERY_ENDTFM LSA_RECOVERY_ENDTFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo SSA_RECOVERY_ENDTFM;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_RECOVERY_ENDTFM;
		}
	}
    DUTFlowItem SSA_RECOVERY_ENDTFM SSA_RECOVERY_ENDTFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow XSA_NON_RECOVERY_ENDHFM
{
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21286600_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_0;
	        SetBin SoftBins.b21286600_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21286602_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_2;
	        SetBin SoftBins.b21286602_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21286610_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR_0;
	        SetBin SoftBins.b21286610_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21286612_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR_2;
	        SetBin SoftBins.b21286612_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_BTR;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61356620_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_0;
	        SetBin SoftBins.b61356620_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61356622_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU_2;
	        SetBin SoftBins.b61356622_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_CPU;
			Return 1;
        }
	}
}
DUTFlow LSA_RECOVERY_ENDHFM
{
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336700_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_0;
	        SetBin SoftBins.b21336700_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336702_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_2;
	        SetBin SoftBins.b21336702_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336710_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_0;
	        SetBin SoftBins.b21336710_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336712_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_2;
	        SetBin SoftBins.b21336712_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336720_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_0;
	        SetBin SoftBins.b21336720_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336722_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_2;
	        SetBin SoftBins.b21336722_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336730_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_0;
	        SetBin SoftBins.b21336730_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336732_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_2;
	        SetBin SoftBins.b21336732_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336740_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_0;
	        SetBin SoftBins.b21336740_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336742_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_2;
	        SetBin SoftBins.b21336742_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
			GoTo LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
        }
	}
	DUTFlowItem LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5 LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336750_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_0;
	        SetBin SoftBins.b21336750_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n21336752_fail_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_2;
	        SetBin SoftBins.b21336752_fail_ARR_VPU_LSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
			Return 1;
        }
	}
}
DUTFlow SSA_RECOVERY_ENDHFM
{
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61336800_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_0;
	        SetBin SoftBins.b61336800_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61336802_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0_2;
	        SetBin SoftBins.b61336802_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE0;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346810_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_0;
	        SetBin SoftBins.b61346810_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346812_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1_2;
	        SetBin SoftBins.b61346812_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE1;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346820_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_0;
	        SetBin SoftBins.b61346820_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346822_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2_2;
	        SetBin SoftBins.b61346822_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE2;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61356830_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_0;
	        SetBin SoftBins.b61356830_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61356832_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3_2;
	        SetBin SoftBins.b61356832_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE3;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61366840_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_0;
	        SetBin SoftBins.b61366840_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61366842_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4_2;
	        SetBin SoftBins.b61366842_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE4;
			GoTo SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
        }
	}
	DUTFlowItem SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5 SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61376850_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_0;
	        SetBin SoftBins.b61376850_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61376852_fail_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5_2;
	        SetBin SoftBins.b61376852_fail_ARR_VPU_SSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_TILE5;
			Return 1;
        }
	}
}
DUTFlow ENDHFM
{
	DUTFlowItem CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n90626500_fail_CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS_0;
	        SetBin SoftBins.b90626500_fail_ARR_VPU_CTRL_X_AUX_K_ENDHFM_X_X_X_X_X_RECBYPASS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS;
		}
	}
	DUTFlowItem XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS @EDC
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17616510_fail_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS_0;
	        ##EDC## SetBin SoftBins.b17616510_fail_ARR_VPU_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			GoTo XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n17616512_fail_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS_2;
	        ##EDC## SetBin SoftBins.b17616512_fail_ARR_VPU_XSA_VPU_SCREEN_E_ENDHFM_X_X_X_X_VPU_MASK_ALLSTRESS;
			GoTo XSA_NON_RECOVERY_ENDHFM;
        }
	}
	DUTFlowItem XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL 
	{
		Result -2
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b99010001_fail_FAIL_DPS_ALARM;
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			SetBin SoftBins.b98010001_fail_FAIL_SYSTEM_SOFTWARE;
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346520_fail_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL_0;
	        SetBin SoftBins.b61346520_fail_ARR_VPU_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL;
			Return 1;
        }
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
        Result 2
        {
	        Property PassFail = "Fail";
	        IncrementCounters ARR_VPU::n61346522_fail_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL_2;
	        SetBin SoftBins.b61346522_fail_ARR_VPU_XSA_VPU_VMIN_K_ENDHFM_TITO_VPU_NOM_TFM_3700_ALL;
			Return 1;
        }
	}
    DUTFlowItem XSA_NON_RECOVERY_ENDHFM XSA_NON_RECOVERY_ENDHFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo LSA_RECOVERY_ENDHFM;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo LSA_RECOVERY_ENDHFM;
		}
	}
    DUTFlowItem LSA_RECOVERY_ENDHFM LSA_RECOVERY_ENDHFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo SSA_RECOVERY_ENDHFM;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo SSA_RECOVERY_ENDHFM;
		}
	}
    DUTFlowItem SSA_RECOVERY_ENDHFM SSA_RECOVERY_ENDHFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			Return 1;
		}
		Result 1
		{
			Property PassFail = "Pass";
			Return 1;
		}
	}
}
DUTFlow ARR_GFX_EXVF @EXVF_SubFlow
{
    DUTFlowItem ENDTFM ENDTFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
        Result 0
        {
	        Property PassFail = "Fail";
			GoTo ENDHFM;
		}
		Result 1
		{
			Property PassFail = "Pass";
			GoTo ENDHFM;
		}
	}
    DUTFlowItem ENDHFM ENDHFM
	{
		Result -2
		{
			Property PassFail = "Fail";
			Return -2;
		}		
		Result -1
		{
			Property PassFail = "Fail";
			Return -1;
		}
	}
}